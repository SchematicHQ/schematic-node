// This file was auto-generated by Fern from our API Definition.

import * as Schematic from "../../src/api/index";
import { SchematicClient } from "../../src/Client";
import { mockServerPool } from "../mock-server/MockServerPool";

describe("Plangroups", () => {
    test("getPlanGroup (1)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                add_ons: [
                    {
                        charge_type: "charge_type",
                        company_count: 1,
                        compatible_plan_ids: ["compatible_plan_ids"],
                        controlled_by: "controlled_by",
                        created_at: "2024-01-15T09:30:00Z",
                        description: "description",
                        entitlements: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                environment_id: "environment_id",
                                feature_id: "feature_id",
                                id: "id",
                                plan_id: "plan_id",
                                rule_id: "rule_id",
                                updated_at: "2024-01-15T09:30:00Z",
                                value_type: "value_type",
                            },
                        ],
                        features: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                description: "description",
                                feature_type: "feature_type",
                                flags: [
                                    {
                                        created_at: "2024-01-15T09:30:00Z",
                                        default_value: true,
                                        description: "description",
                                        flag_type: "flag_type",
                                        id: "id",
                                        key: "key",
                                        name: "name",
                                        rules: [
                                            {
                                                condition_groups: [
                                                    {
                                                        conditions: [
                                                            {
                                                                condition_type: "condition_type",
                                                                created_at: "2024-01-15T09:30:00Z",
                                                                environment_id: "environment_id",
                                                                id: "id",
                                                                operator: "operator",
                                                                resource_ids: ["resource_ids"],
                                                                resources: [{ id: "id", name: "name" }],
                                                                rule_id: "rule_id",
                                                                trait_value: "trait_value",
                                                                updated_at: "2024-01-15T09:30:00Z",
                                                            },
                                                        ],
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        rule_id: "rule_id",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                conditions: [
                                                    {
                                                        condition_type: "condition_type",
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        operator: "operator",
                                                        resource_ids: ["resource_ids"],
                                                        resources: [{ id: "id", name: "name" }],
                                                        rule_id: "rule_id",
                                                        trait_value: "trait_value",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                created_at: "2024-01-15T09:30:00Z",
                                                environment_id: "environment_id",
                                                id: "id",
                                                name: "name",
                                                priority: 1,
                                                rule_type: "rule_type",
                                                updated_at: "2024-01-15T09:30:00Z",
                                                value: true,
                                            },
                                        ],
                                        updated_at: "2024-01-15T09:30:00Z",
                                    },
                                ],
                                icon: "icon",
                                id: "id",
                                name: "name",
                                plans: [{ id: "id", name: "name" }],
                                updated_at: "2024-01-15T09:30:00Z",
                            },
                        ],
                        icon: "icon",
                        id: "id",
                        is_custom: true,
                        is_default: true,
                        is_free: true,
                        is_trialable: true,
                        name: "name",
                        plan_type: "plan_type",
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                ],
                checkout_settings: { collect_address: true, collect_email: true, collect_phone: true },
                custom_plan_config: { cta_text: "cta_text", cta_web_site: "cta_web_site", price_text: "price_text" },
                custom_plan_id: "custom_plan_id",
                default_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [{ id: "id", name: "name" }],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [{ id: "id", name: "name" }],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [{ id: "id", name: "name" }],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                default_plan_id: "default_plan_id",
                fallback_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [{ id: "id", name: "name" }],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [{ id: "id", name: "name" }],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [{ id: "id", name: "name" }],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [{ id: "id", name: "name" }],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [{ id: "id", name: "name" }],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [{ id: "id", name: "name" }],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                initial_plan_id: "initial_plan_id",
                initial_plan_price: {
                    currency: "currency",
                    external_price_id: "external_price_id",
                    id: "id",
                    interval: "interval",
                    price: 1,
                    price_decimal: "price_decimal",
                    scheme: "scheme",
                },
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_list: [{ plan_id: "plan_id" }],
                ordered_bundle_list: [{ bundleId: "bundleId" }],
                ordered_plan_list: [{ plan_id: "plan_id" }],
                plans: [
                    {
                        charge_type: "charge_type",
                        company_count: 1,
                        compatible_plan_ids: ["compatible_plan_ids"],
                        controlled_by: "controlled_by",
                        created_at: "2024-01-15T09:30:00Z",
                        description: "description",
                        entitlements: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                environment_id: "environment_id",
                                feature_id: "feature_id",
                                id: "id",
                                plan_id: "plan_id",
                                rule_id: "rule_id",
                                updated_at: "2024-01-15T09:30:00Z",
                                value_type: "value_type",
                            },
                        ],
                        features: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                description: "description",
                                feature_type: "feature_type",
                                flags: [
                                    {
                                        created_at: "2024-01-15T09:30:00Z",
                                        default_value: true,
                                        description: "description",
                                        flag_type: "flag_type",
                                        id: "id",
                                        key: "key",
                                        name: "name",
                                        rules: [
                                            {
                                                condition_groups: [
                                                    {
                                                        conditions: [
                                                            {
                                                                condition_type: "condition_type",
                                                                created_at: "2024-01-15T09:30:00Z",
                                                                environment_id: "environment_id",
                                                                id: "id",
                                                                operator: "operator",
                                                                resource_ids: ["resource_ids"],
                                                                resources: [{ id: "id", name: "name" }],
                                                                rule_id: "rule_id",
                                                                trait_value: "trait_value",
                                                                updated_at: "2024-01-15T09:30:00Z",
                                                            },
                                                        ],
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        rule_id: "rule_id",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                conditions: [
                                                    {
                                                        condition_type: "condition_type",
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        operator: "operator",
                                                        resource_ids: ["resource_ids"],
                                                        resources: [{ id: "id", name: "name" }],
                                                        rule_id: "rule_id",
                                                        trait_value: "trait_value",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                created_at: "2024-01-15T09:30:00Z",
                                                environment_id: "environment_id",
                                                id: "id",
                                                name: "name",
                                                priority: 1,
                                                rule_type: "rule_type",
                                                updated_at: "2024-01-15T09:30:00Z",
                                                value: true,
                                            },
                                        ],
                                        updated_at: "2024-01-15T09:30:00Z",
                                    },
                                ],
                                icon: "icon",
                                id: "id",
                                name: "name",
                                plans: [{ id: "id", name: "name" }],
                                updated_at: "2024-01-15T09:30:00Z",
                            },
                        ],
                        icon: "icon",
                        id: "id",
                        is_custom: true,
                        is_default: true,
                        is_free: true,
                        is_trialable: true,
                        name: "name",
                        plan_type: "plan_type",
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [{ id: "id", name: "name" }],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [{ id: "id", name: "name" }],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [{ id: "id", name: "name" }],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price: {
                    currency: "currency",
                    external_price_id: "external_price_id",
                    id: "id",
                    interval: "interval",
                    price: 1,
                    price_decimal: "price_decimal",
                    scheme: "scheme",
                },
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: { key: "value" },
        };
        server.mockEndpoint().get("/plan-groups").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.plangroups.getPlanGroup();
        expect(response).toEqual({
            data: {
                add_ons: [
                    {
                        charge_type: "charge_type",
                        company_count: 1,
                        compatible_plan_ids: ["compatible_plan_ids"],
                        controlled_by: "controlled_by",
                        created_at: "2024-01-15T09:30:00Z",
                        description: "description",
                        entitlements: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                environment_id: "environment_id",
                                feature_id: "feature_id",
                                id: "id",
                                plan_id: "plan_id",
                                rule_id: "rule_id",
                                updated_at: "2024-01-15T09:30:00Z",
                                value_type: "value_type",
                            },
                        ],
                        features: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                description: "description",
                                feature_type: "feature_type",
                                flags: [
                                    {
                                        created_at: "2024-01-15T09:30:00Z",
                                        default_value: true,
                                        description: "description",
                                        flag_type: "flag_type",
                                        id: "id",
                                        key: "key",
                                        name: "name",
                                        rules: [
                                            {
                                                condition_groups: [
                                                    {
                                                        conditions: [
                                                            {
                                                                condition_type: "condition_type",
                                                                created_at: "2024-01-15T09:30:00Z",
                                                                environment_id: "environment_id",
                                                                id: "id",
                                                                operator: "operator",
                                                                resource_ids: ["resource_ids"],
                                                                resources: [
                                                                    {
                                                                        id: "id",
                                                                        name: "name",
                                                                    },
                                                                ],
                                                                rule_id: "rule_id",
                                                                trait_value: "trait_value",
                                                                updated_at: "2024-01-15T09:30:00Z",
                                                            },
                                                        ],
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        rule_id: "rule_id",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                conditions: [
                                                    {
                                                        condition_type: "condition_type",
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        operator: "operator",
                                                        resource_ids: ["resource_ids"],
                                                        resources: [
                                                            {
                                                                id: "id",
                                                                name: "name",
                                                            },
                                                        ],
                                                        rule_id: "rule_id",
                                                        trait_value: "trait_value",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                created_at: "2024-01-15T09:30:00Z",
                                                environment_id: "environment_id",
                                                id: "id",
                                                name: "name",
                                                priority: 1,
                                                rule_type: "rule_type",
                                                updated_at: "2024-01-15T09:30:00Z",
                                                value: true,
                                            },
                                        ],
                                        updated_at: "2024-01-15T09:30:00Z",
                                    },
                                ],
                                icon: "icon",
                                id: "id",
                                name: "name",
                                plans: [
                                    {
                                        id: "id",
                                        name: "name",
                                    },
                                ],
                                updated_at: "2024-01-15T09:30:00Z",
                            },
                        ],
                        icon: "icon",
                        id: "id",
                        is_custom: true,
                        is_default: true,
                        is_free: true,
                        is_trialable: true,
                        name: "name",
                        plan_type: "plan_type",
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                ],
                checkout_settings: {
                    collect_address: true,
                    collect_email: true,
                    collect_phone: true,
                },
                custom_plan_config: {
                    cta_text: "cta_text",
                    cta_web_site: "cta_web_site",
                    price_text: "price_text",
                },
                custom_plan_id: "custom_plan_id",
                default_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [
                                                                {
                                                                    id: "id",
                                                                    name: "name",
                                                                },
                                                            ],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [
                                                        {
                                                            id: "id",
                                                            name: "name",
                                                        },
                                                    ],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                default_plan_id: "default_plan_id",
                fallback_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [
                                                                {
                                                                    id: "id",
                                                                    name: "name",
                                                                },
                                                            ],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [
                                                        {
                                                            id: "id",
                                                            name: "name",
                                                        },
                                                    ],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [
                                                                {
                                                                    id: "id",
                                                                    name: "name",
                                                                },
                                                            ],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [
                                                        {
                                                            id: "id",
                                                            name: "name",
                                                        },
                                                    ],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                initial_plan_id: "initial_plan_id",
                initial_plan_price: {
                    currency: "currency",
                    external_price_id: "external_price_id",
                    id: "id",
                    interval: "interval",
                    price: 1,
                    price_decimal: "price_decimal",
                    scheme: "scheme",
                },
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_list: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plan_list: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                plans: [
                    {
                        charge_type: "charge_type",
                        company_count: 1,
                        compatible_plan_ids: ["compatible_plan_ids"],
                        controlled_by: "controlled_by",
                        created_at: "2024-01-15T09:30:00Z",
                        description: "description",
                        entitlements: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                environment_id: "environment_id",
                                feature_id: "feature_id",
                                id: "id",
                                plan_id: "plan_id",
                                rule_id: "rule_id",
                                updated_at: "2024-01-15T09:30:00Z",
                                value_type: "value_type",
                            },
                        ],
                        features: [
                            {
                                created_at: "2024-01-15T09:30:00Z",
                                description: "description",
                                feature_type: "feature_type",
                                flags: [
                                    {
                                        created_at: "2024-01-15T09:30:00Z",
                                        default_value: true,
                                        description: "description",
                                        flag_type: "flag_type",
                                        id: "id",
                                        key: "key",
                                        name: "name",
                                        rules: [
                                            {
                                                condition_groups: [
                                                    {
                                                        conditions: [
                                                            {
                                                                condition_type: "condition_type",
                                                                created_at: "2024-01-15T09:30:00Z",
                                                                environment_id: "environment_id",
                                                                id: "id",
                                                                operator: "operator",
                                                                resource_ids: ["resource_ids"],
                                                                resources: [
                                                                    {
                                                                        id: "id",
                                                                        name: "name",
                                                                    },
                                                                ],
                                                                rule_id: "rule_id",
                                                                trait_value: "trait_value",
                                                                updated_at: "2024-01-15T09:30:00Z",
                                                            },
                                                        ],
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        rule_id: "rule_id",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                conditions: [
                                                    {
                                                        condition_type: "condition_type",
                                                        created_at: "2024-01-15T09:30:00Z",
                                                        environment_id: "environment_id",
                                                        id: "id",
                                                        operator: "operator",
                                                        resource_ids: ["resource_ids"],
                                                        resources: [
                                                            {
                                                                id: "id",
                                                                name: "name",
                                                            },
                                                        ],
                                                        rule_id: "rule_id",
                                                        trait_value: "trait_value",
                                                        updated_at: "2024-01-15T09:30:00Z",
                                                    },
                                                ],
                                                created_at: "2024-01-15T09:30:00Z",
                                                environment_id: "environment_id",
                                                id: "id",
                                                name: "name",
                                                priority: 1,
                                                rule_type: "rule_type",
                                                updated_at: "2024-01-15T09:30:00Z",
                                                value: true,
                                            },
                                        ],
                                        updated_at: "2024-01-15T09:30:00Z",
                                    },
                                ],
                                icon: "icon",
                                id: "id",
                                name: "name",
                                plans: [
                                    {
                                        id: "id",
                                        name: "name",
                                    },
                                ],
                                updated_at: "2024-01-15T09:30:00Z",
                            },
                        ],
                        icon: "icon",
                        id: "id",
                        is_custom: true,
                        is_default: true,
                        is_free: true,
                        is_trialable: true,
                        name: "name",
                        plan_type: "plan_type",
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan: {
                    audience_type: "audience_type",
                    billing_product: {
                        account_id: "account_id",
                        created_at: "2024-01-15T09:30:00Z",
                        environment_id: "environment_id",
                        external_id: "external_id",
                        is_active: true,
                        name: "name",
                        price: 1.1,
                        prices: [
                            {
                                currency: "currency",
                                external_price_id: "external_price_id",
                                id: "id",
                                interval: "interval",
                                price: 1,
                                scheme: "scheme",
                            },
                        ],
                        product_id: "product_id",
                        quantity: 1.1,
                        subscription_count: 1,
                        updated_at: "2024-01-15T09:30:00Z",
                    },
                    charge_type: "charge_type",
                    company_count: 1,
                    compatible_plan_ids: ["compatible_plan_ids"],
                    controlled_by: "controlled_by",
                    created_at: "2024-01-15T09:30:00Z",
                    custom_plan_config: {
                        cta_text: "cta_text",
                        cta_web_site: "cta_web_site",
                        price_text: "price_text",
                    },
                    description: "description",
                    entitlements: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            environment_id: "environment_id",
                            feature_id: "feature_id",
                            id: "id",
                            plan_id: "plan_id",
                            rule_id: "rule_id",
                            updated_at: "2024-01-15T09:30:00Z",
                            value_type: "value_type",
                        },
                    ],
                    features: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            description: "description",
                            feature_type: "feature_type",
                            flags: [
                                {
                                    created_at: "2024-01-15T09:30:00Z",
                                    default_value: true,
                                    description: "description",
                                    flag_type: "flag_type",
                                    id: "id",
                                    key: "key",
                                    name: "name",
                                    rules: [
                                        {
                                            condition_groups: [
                                                {
                                                    conditions: [
                                                        {
                                                            condition_type: "condition_type",
                                                            created_at: "2024-01-15T09:30:00Z",
                                                            environment_id: "environment_id",
                                                            id: "id",
                                                            operator: "operator",
                                                            resource_ids: ["resource_ids"],
                                                            resources: [
                                                                {
                                                                    id: "id",
                                                                    name: "name",
                                                                },
                                                            ],
                                                            rule_id: "rule_id",
                                                            trait_value: "trait_value",
                                                            updated_at: "2024-01-15T09:30:00Z",
                                                        },
                                                    ],
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    rule_id: "rule_id",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            conditions: [
                                                {
                                                    condition_type: "condition_type",
                                                    created_at: "2024-01-15T09:30:00Z",
                                                    environment_id: "environment_id",
                                                    id: "id",
                                                    operator: "operator",
                                                    resource_ids: ["resource_ids"],
                                                    resources: [
                                                        {
                                                            id: "id",
                                                            name: "name",
                                                        },
                                                    ],
                                                    rule_id: "rule_id",
                                                    trait_value: "trait_value",
                                                    updated_at: "2024-01-15T09:30:00Z",
                                                },
                                            ],
                                            created_at: "2024-01-15T09:30:00Z",
                                            environment_id: "environment_id",
                                            id: "id",
                                            name: "name",
                                            priority: 1,
                                            rule_type: "rule_type",
                                            updated_at: "2024-01-15T09:30:00Z",
                                            value: true,
                                        },
                                    ],
                                    updated_at: "2024-01-15T09:30:00Z",
                                },
                            ],
                            icon: "icon",
                            id: "id",
                            name: "name",
                            plans: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    icon: "icon",
                    id: "id",
                    included_credit_grants: [
                        {
                            created_at: "2024-01-15T09:30:00Z",
                            credit_amount: 1,
                            credit_id: "credit_id",
                            credit_name: "credit_name",
                            id: "id",
                            plan_id: "plan_id",
                            plan_name: "plan_name",
                            reset_cadence: "reset_cadence",
                            reset_start: "reset_start",
                            updated_at: "2024-01-15T09:30:00Z",
                        },
                    ],
                    is_custom: true,
                    is_default: true,
                    is_free: true,
                    is_trialable: true,
                    monthly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    name: "name",
                    one_time_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                    plan_type: "plan_type",
                    trial_days: 1,
                    updated_at: "2024-01-15T09:30:00Z",
                    yearly_price: {
                        currency: "currency",
                        external_price_id: "external_price_id",
                        id: "id",
                        interval: "interval",
                        price: 1,
                        scheme: "scheme",
                    },
                },
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price: {
                    currency: "currency",
                    external_price_id: "external_price_id",
                    id: "id",
                    interval: "interval",
                    price: 1,
                    price_decimal: "price_decimal",
                    scheme: "scheme",
                },
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: {
                key: "value",
            },
        });
    });

    test("getPlanGroup (2)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { error: "error" };
        server.mockEndpoint().get("/plan-groups").respondWith().statusCode(401).jsonBody(rawResponseBody).build();

        await expect(async () => {
            return await client.plangroups.getPlanGroup();
        }).rejects.toThrow(Schematic.UnauthorizedError);
    });

    test("getPlanGroup (3)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { error: "error" };
        server.mockEndpoint().get("/plan-groups").respondWith().statusCode(403).jsonBody(rawResponseBody).build();

        await expect(async () => {
            return await client.plangroups.getPlanGroup();
        }).rejects.toThrow(Schematic.ForbiddenError);
    });

    test("getPlanGroup (4)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { error: "error" };
        server.mockEndpoint().get("/plan-groups").respondWith().statusCode(404).jsonBody(rawResponseBody).build();

        await expect(async () => {
            return await client.plangroups.getPlanGroup();
        }).rejects.toThrow(Schematic.NotFoundError);
    });

    test("getPlanGroup (5)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { error: "error" };
        server.mockEndpoint().get("/plan-groups").respondWith().statusCode(500).jsonBody(rawResponseBody).build();

        await expect(async () => {
            return await client.plangroups.getPlanGroup();
        }).rejects.toThrow(Schematic.InternalServerError);
    });

    test("createPlanGroup (1)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = {
            data: {
                add_on_compatibilities: [
                    { compatible_plan_ids: ["compatible_plan_ids"], source_plan_id: "source_plan_id" },
                ],
                add_on_ids: ["add_on_ids"],
                checkout_settings: { collect_address: true, collect_email: true, collect_phone: true },
                default_plan_id: "default_plan_id",
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan_id: "initial_plan_id",
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_ids: [{ plan_id: "plan_id" }],
                plan_ids: [{ plan_id: "plan_id" }],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: { key: "value" },
        };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.plangroups.createPlanGroup({
            add_on_ids: ["add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [
                {
                    plan_id: "plan_id",
                },
            ],
            ordered_bundle_list: [
                {
                    bundleId: "bundleId",
                },
            ],
            ordered_plans: [
                {
                    plan_id: "plan_id",
                },
            ],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        });
        expect(response).toEqual({
            data: {
                add_on_compatibilities: [
                    {
                        compatible_plan_ids: ["compatible_plan_ids"],
                        source_plan_id: "source_plan_id",
                    },
                ],
                add_on_ids: ["add_on_ids"],
                checkout_settings: {
                    collect_address: true,
                    collect_email: true,
                    collect_phone: true,
                },
                default_plan_id: "default_plan_id",
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan_id: "initial_plan_id",
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_ids: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                plan_ids: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: {
                key: "value",
            },
        });
    });

    test("createPlanGroup (2)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(400)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.createPlanGroup({
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.BadRequestError);
    });

    test("createPlanGroup (3)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(401)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.createPlanGroup({
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.UnauthorizedError);
    });

    test("createPlanGroup (4)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(403)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.createPlanGroup({
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.ForbiddenError);
    });

    test("createPlanGroup (5)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(404)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.createPlanGroup({
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.NotFoundError);
    });

    test("createPlanGroup (6)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .post("/plan-groups")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(500)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.createPlanGroup({
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.InternalServerError);
    });

    test("updatePlanGroup (1)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = {
            data: {
                add_on_compatibilities: [
                    { compatible_plan_ids: ["compatible_plan_ids"], source_plan_id: "source_plan_id" },
                ],
                add_on_ids: ["add_on_ids"],
                checkout_settings: { collect_address: true, collect_email: true, collect_phone: true },
                default_plan_id: "default_plan_id",
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan_id: "initial_plan_id",
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_ids: [{ plan_id: "plan_id" }],
                plan_ids: [{ plan_id: "plan_id" }],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: { key: "value" },
        };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.plangroups.updatePlanGroup("plan_group_id", {
            add_on_ids: ["add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [
                {
                    plan_id: "plan_id",
                },
            ],
            ordered_bundle_list: [
                {
                    bundleId: "bundleId",
                },
            ],
            ordered_plans: [
                {
                    plan_id: "plan_id",
                },
            ],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        });
        expect(response).toEqual({
            data: {
                add_on_compatibilities: [
                    {
                        compatible_plan_ids: ["compatible_plan_ids"],
                        source_plan_id: "source_plan_id",
                    },
                ],
                add_on_ids: ["add_on_ids"],
                checkout_settings: {
                    collect_address: true,
                    collect_email: true,
                    collect_phone: true,
                },
                default_plan_id: "default_plan_id",
                fallback_plan_id: "fallback_plan_id",
                id: "id",
                initial_plan_id: "initial_plan_id",
                initial_plan_price_id: "initial_plan_price_id",
                ordered_add_on_ids: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                plan_ids: [
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
                tax_collection_enabled: true,
                trial_days: 1,
                trial_expiry_plan_id: "trial_expiry_plan_id",
                trial_expiry_plan_price_id: "trial_expiry_plan_price_id",
                trial_payment_method_required: true,
            },
            params: {
                key: "value",
            },
        });
    });

    test("updatePlanGroup (2)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(400)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.updatePlanGroup("plan_group_id", {
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.BadRequestError);
    });

    test("updatePlanGroup (3)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(401)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.updatePlanGroup("plan_group_id", {
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.UnauthorizedError);
    });

    test("updatePlanGroup (4)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(403)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.updatePlanGroup("plan_group_id", {
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.ForbiddenError);
    });

    test("updatePlanGroup (5)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(404)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.updatePlanGroup("plan_group_id", {
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.NotFoundError);
    });

    test("updatePlanGroup (6)", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            add_on_ids: ["add_on_ids", "add_on_ids"],
            checkout_collect_address: true,
            checkout_collect_email: true,
            checkout_collect_phone: true,
            enable_tax_collection: true,
            ordered_add_ons: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            ordered_bundle_list: [{ bundleId: "bundleId" }, { bundleId: "bundleId" }],
            ordered_plans: [{ plan_id: "plan_id" }, { plan_id: "plan_id" }],
            prevent_downgrades_when_over_limit: true,
            show_credits: true,
            show_period_toggle: true,
            show_zero_price_as_free: true,
            sync_customer_billing_details_for_tax: true,
        };
        const rawResponseBody = { error: "error" };
        server
            .mockEndpoint()
            .put("/plan-groups/plan_group_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(500)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.plangroups.updatePlanGroup("plan_group_id", {
                add_on_ids: ["add_on_ids", "add_on_ids"],
                checkout_collect_address: true,
                checkout_collect_email: true,
                checkout_collect_phone: true,
                enable_tax_collection: true,
                ordered_add_ons: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                ordered_bundle_list: [
                    {
                        bundleId: "bundleId",
                    },
                    {
                        bundleId: "bundleId",
                    },
                ],
                ordered_plans: [
                    {
                        plan_id: "plan_id",
                    },
                    {
                        plan_id: "plan_id",
                    },
                ],
                prevent_downgrades_when_over_limit: true,
                show_credits: true,
                show_period_toggle: true,
                show_zero_price_as_free: true,
                sync_customer_billing_details_for_tax: true,
            });
        }).rejects.toThrow(Schematic.InternalServerError);
    });
});
