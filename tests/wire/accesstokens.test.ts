/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { SchematicClient } from "../../src/Client";

describe("Accesstokens", () => {
    test("issueTemporaryAccessToken", async () => {
        const server = mockServerPool.createServer();
        const client = new SchematicClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { lookup: { key: "value" }, resource_type: "company" };
        const rawResponseBody = {
            data: {
                api_key_id: "api_key_id",
                created_at: "2024-01-15T09:30:00Z",
                environment_id: "environment_id",
                expired_at: "2024-01-15T09:30:00Z",
                id: "id",
                resource_type: "resource_type",
                token: "token",
                updated_at: "2024-01-15T09:30:00Z",
            },
            params: { key: "value" },
        };
        server
            .mockEndpoint()
            .post("/temporary-access-tokens")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accesstokens.issueTemporaryAccessToken({
            lookup: {
                key: "value",
            },
        });
        expect(response).toEqual({
            data: {
                api_key_id: "api_key_id",
                created_at: "2024-01-15T09:30:00Z",
                environment_id: "environment_id",
                expired_at: "2024-01-15T09:30:00Z",
                id: "id",
                resource_type: "resource_type",
                token: "token",
                updated_at: "2024-01-15T09:30:00Z",
            },
            params: {
                key: "value",
            },
        });
    });
});
