/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Schematic from "../../../../../api/index";
import * as core from "../../../../../core";
import { CreateFeatureRequestBodyFeatureType } from "../../types/CreateFeatureRequestBodyFeatureType";
import { CreateOrUpdateFlagRequestBody } from "../../../../types/CreateOrUpdateFlagRequestBody";

export const CreateFeatureRequestBody: core.serialization.Schema<
    serializers.CreateFeatureRequestBody.Raw,
    Schematic.CreateFeatureRequestBody
> = core.serialization.object({
    description: core.serialization.string(),
    eventSubtype: core.serialization.property("event_subtype", core.serialization.string().optional()),
    featureType: core.serialization.property("feature_type", CreateFeatureRequestBodyFeatureType),
    flag: CreateOrUpdateFlagRequestBody.optional(),
    icon: core.serialization.string().optional(),
    lifecyclePhase: core.serialization.property("lifecycle_phase", core.serialization.string().optional()),
    maintainerId: core.serialization.property("maintainer_id", core.serialization.string().optional()),
    name: core.serialization.string(),
    pluralName: core.serialization.property("plural_name", core.serialization.string().optional()),
    singularName: core.serialization.property("singular_name", core.serialization.string().optional()),
    traitId: core.serialization.property("trait_id", core.serialization.string().optional()),
});

export declare namespace CreateFeatureRequestBody {
    export interface Raw {
        description: string;
        event_subtype?: string | null;
        feature_type: CreateFeatureRequestBodyFeatureType.Raw;
        flag?: CreateOrUpdateFlagRequestBody.Raw | null;
        icon?: string | null;
        lifecycle_phase?: string | null;
        maintainer_id?: string | null;
        name: string;
        plural_name?: string | null;
        singular_name?: string | null;
        trait_id?: string | null;
    }
}
