/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Schematic from "../../../../api/index";
import * as core from "../../../../core";

export const CountFeatureUsageParams: core.serialization.ObjectSchema<
    serializers.CountFeatureUsageParams.Raw,
    Schematic.CountFeatureUsageParams
> = core.serialization.object({
    companyId: core.serialization.property("company_id", core.serialization.string().optional()),
    companyKeys: core.serialization.property(
        "company_keys",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional()
    ),
    featureIds: core.serialization.property(
        "feature_ids",
        core.serialization.list(core.serialization.string()).optional()
    ),
    limit: core.serialization.number().optional(),
    offset: core.serialization.number().optional(),
    q: core.serialization.string().optional(),
});

export declare namespace CountFeatureUsageParams {
    interface Raw {
        company_id?: string | null;
        company_keys?: Record<string, string> | null;
        feature_ids?: string[] | null;
        limit?: number | null;
        offset?: number | null;
        q?: string | null;
    }
}
