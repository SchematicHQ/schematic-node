/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Schematic from "../../../../api/index";
import * as core from "../../../../core";
import { CountCompaniesForAdvancedFilterResponseParamsSortOrderDirection } from "./CountCompaniesForAdvancedFilterResponseParamsSortOrderDirection";

export const CountCompaniesForAdvancedFilterParams: core.serialization.ObjectSchema<
    serializers.CountCompaniesForAdvancedFilterParams.Raw,
    Schematic.CountCompaniesForAdvancedFilterParams
> = core.serialization.object({
    displayProperties: core.serialization.property(
        "display_properties",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    featureIds: core.serialization.property(
        "feature_ids",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    ids: core.serialization.list(core.serialization.string()).optional(),
    limit: core.serialization.number().optional(),
    monetizedSubscriptions: core.serialization.property(
        "monetized_subscriptions",
        core.serialization.boolean().optional(),
    ),
    offset: core.serialization.number().optional(),
    planIds: core.serialization.property("plan_ids", core.serialization.list(core.serialization.string()).optional()),
    q: core.serialization.string().optional(),
    sortOrderColumn: core.serialization.property("sort_order_column", core.serialization.string().optional()),
    sortOrderDirection: core.serialization.property(
        "sort_order_direction",
        CountCompaniesForAdvancedFilterResponseParamsSortOrderDirection.optional(),
    ),
    subscriptionStatuses: core.serialization.property(
        "subscription_statuses",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    subscriptionTypes: core.serialization.property(
        "subscription_types",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    withoutPlan: core.serialization.property("without_plan", core.serialization.boolean().optional()),
    withoutSubscription: core.serialization.property("without_subscription", core.serialization.boolean().optional()),
});

export declare namespace CountCompaniesForAdvancedFilterParams {
    export interface Raw {
        display_properties?: string[] | null;
        feature_ids?: string[] | null;
        ids?: string[] | null;
        limit?: number | null;
        monetized_subscriptions?: boolean | null;
        offset?: number | null;
        plan_ids?: string[] | null;
        q?: string | null;
        sort_order_column?: string | null;
        sort_order_direction?: CountCompaniesForAdvancedFilterResponseParamsSortOrderDirection.Raw | null;
        subscription_statuses?: string[] | null;
        subscription_types?: string[] | null;
        without_plan?: boolean | null;
        without_subscription?: boolean | null;
    }
}
