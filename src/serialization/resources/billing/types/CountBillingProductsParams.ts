/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Schematic from "../../../../api/index";
import * as core from "../../../../core";
import { CountBillingProductsResponseParamsPriceUsageType } from "./CountBillingProductsResponseParamsPriceUsageType";

export const CountBillingProductsParams: core.serialization.ObjectSchema<
    serializers.CountBillingProductsParams.Raw,
    Schematic.CountBillingProductsParams
> = core.serialization.object({
    ids: core.serialization.list(core.serialization.string()).optional(),
    isActive: core.serialization.property("is_active", core.serialization.boolean().optional()),
    limit: core.serialization.number().optional(),
    name: core.serialization.string().optional(),
    offset: core.serialization.number().optional(),
    priceUsageType: core.serialization.property(
        "price_usage_type",
        CountBillingProductsResponseParamsPriceUsageType.optional(),
    ),
    q: core.serialization.string().optional(),
    withOneTimeCharges: core.serialization.property("with_one_time_charges", core.serialization.boolean().optional()),
    withPricesOnly: core.serialization.property("with_prices_only", core.serialization.boolean().optional()),
    withZeroPrice: core.serialization.property("with_zero_price", core.serialization.boolean().optional()),
    withoutLinkedToPlan: core.serialization.property("without_linked_to_plan", core.serialization.boolean().optional()),
});

export declare namespace CountBillingProductsParams {
    export interface Raw {
        ids?: string[] | null;
        is_active?: boolean | null;
        limit?: number | null;
        name?: string | null;
        offset?: number | null;
        price_usage_type?: CountBillingProductsResponseParamsPriceUsageType.Raw | null;
        q?: string | null;
        with_one_time_charges?: boolean | null;
        with_prices_only?: boolean | null;
        with_zero_price?: boolean | null;
        without_linked_to_plan?: boolean | null;
    }
}
