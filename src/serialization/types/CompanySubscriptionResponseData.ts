/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { BillingSubscriptionDiscountView } from "./BillingSubscriptionDiscountView";
import { InvoiceResponseData } from "./InvoiceResponseData";
import { PaymentMethodResponseData } from "./PaymentMethodResponseData";
import { BillingProductForSubscriptionResponseData } from "./BillingProductForSubscriptionResponseData";

export const CompanySubscriptionResponseData: core.serialization.ObjectSchema<
    serializers.CompanySubscriptionResponseData.Raw,
    Schematic.CompanySubscriptionResponseData
> = core.serialization.object({
    cancelAt: core.serialization.property("cancel_at", core.serialization.date().optional()),
    cancelAtPeriodEnd: core.serialization.property("cancel_at_period_end", core.serialization.boolean()),
    currency: core.serialization.string(),
    customerExternalId: core.serialization.property("customer_external_id", core.serialization.string()),
    discounts: core.serialization.list(BillingSubscriptionDiscountView),
    expiredAt: core.serialization.property("expired_at", core.serialization.date().optional()),
    interval: core.serialization.string(),
    latestInvoice: core.serialization.property("latest_invoice", InvoiceResponseData.optional()),
    paymentMethod: core.serialization.property("payment_method", PaymentMethodResponseData.optional()),
    products: core.serialization.list(BillingProductForSubscriptionResponseData),
    status: core.serialization.string(),
    subscriptionExternalId: core.serialization.property("subscription_external_id", core.serialization.string()),
    totalPrice: core.serialization.property("total_price", core.serialization.number()),
    trialEnd: core.serialization.property("trial_end", core.serialization.date().optional()),
});

export declare namespace CompanySubscriptionResponseData {
    interface Raw {
        cancel_at?: string | null;
        cancel_at_period_end: boolean;
        currency: string;
        customer_external_id: string;
        discounts: BillingSubscriptionDiscountView.Raw[];
        expired_at?: string | null;
        interval: string;
        latest_invoice?: InvoiceResponseData.Raw | null;
        payment_method?: PaymentMethodResponseData.Raw | null;
        products: BillingProductForSubscriptionResponseData.Raw[];
        status: string;
        subscription_external_id: string;
        total_price: number;
        trial_end?: string | null;
    }
}
