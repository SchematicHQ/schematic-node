/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const PlanTraitResponseData: core.serialization.ObjectSchema<
    serializers.PlanTraitResponseData.Raw,
    Schematic.PlanTraitResponseData
> = core.serialization.object({
    accountId: core.serialization.property("account_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    environmentId: core.serialization.property("environment_id", core.serialization.string()),
    id: core.serialization.string(),
    planId: core.serialization.property("plan_id", core.serialization.string()),
    traitId: core.serialization.property("trait_id", core.serialization.string()),
    traitValue: core.serialization.property("trait_value", core.serialization.string()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace PlanTraitResponseData {
    export interface Raw {
        account_id: string;
        created_at: string;
        environment_id: string;
        id: string;
        plan_id: string;
        trait_id: string;
        trait_value: string;
        updated_at: string;
    }
}
