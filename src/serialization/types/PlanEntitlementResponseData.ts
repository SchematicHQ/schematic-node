/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { FeatureResponseData } from "./FeatureResponseData";
import { BillingPriceView } from "./BillingPriceView";
import { PlanResponseData } from "./PlanResponseData";
import { BillingProductResponseData } from "./BillingProductResponseData";
import { BillingCreditResponseData } from "./BillingCreditResponseData";
import { EntityTraitDefinitionResponseData } from "./EntityTraitDefinitionResponseData";

export const PlanEntitlementResponseData: core.serialization.ObjectSchema<
    serializers.PlanEntitlementResponseData.Raw,
    Schematic.PlanEntitlementResponseData
> = core.serialization.object({
    billingThreshold: core.serialization.property("billing_threshold", core.serialization.number().optional()),
    consumptionRate: core.serialization.property("consumption_rate", core.serialization.number().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    environmentId: core.serialization.property("environment_id", core.serialization.string()),
    feature: FeatureResponseData.optional(),
    featureId: core.serialization.property("feature_id", core.serialization.string()),
    id: core.serialization.string(),
    meteredMonthlyPrice: core.serialization.property("metered_monthly_price", BillingPriceView.optional()),
    meteredYearlyPrice: core.serialization.property("metered_yearly_price", BillingPriceView.optional()),
    metricPeriod: core.serialization.property("metric_period", core.serialization.string().optional()),
    metricPeriodMonthReset: core.serialization.property(
        "metric_period_month_reset",
        core.serialization.string().optional(),
    ),
    plan: PlanResponseData.optional(),
    planId: core.serialization.property("plan_id", core.serialization.string()),
    priceBehavior: core.serialization.property("price_behavior", core.serialization.string().optional()),
    ruleId: core.serialization.property("rule_id", core.serialization.string()),
    ruleIdUsageExceeded: core.serialization.property("rule_id_usage_exceeded", core.serialization.string().optional()),
    softLimit: core.serialization.property("soft_limit", core.serialization.number().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    usageBasedProduct: core.serialization.property("usage_based_product", BillingProductResponseData.optional()),
    valueBool: core.serialization.property("value_bool", core.serialization.boolean().optional()),
    valueCredit: core.serialization.property("value_credit", BillingCreditResponseData.optional()),
    valueNumeric: core.serialization.property("value_numeric", core.serialization.number().optional()),
    valueTrait: core.serialization.property("value_trait", EntityTraitDefinitionResponseData.optional()),
    valueTraitId: core.serialization.property("value_trait_id", core.serialization.string().optional()),
    valueType: core.serialization.property("value_type", core.serialization.string()),
});

export declare namespace PlanEntitlementResponseData {
    export interface Raw {
        billing_threshold?: number | null;
        consumption_rate?: number | null;
        created_at: string;
        environment_id: string;
        feature?: FeatureResponseData.Raw | null;
        feature_id: string;
        id: string;
        metered_monthly_price?: BillingPriceView.Raw | null;
        metered_yearly_price?: BillingPriceView.Raw | null;
        metric_period?: string | null;
        metric_period_month_reset?: string | null;
        plan?: PlanResponseData.Raw | null;
        plan_id: string;
        price_behavior?: string | null;
        rule_id: string;
        rule_id_usage_exceeded?: string | null;
        soft_limit?: number | null;
        updated_at: string;
        usage_based_product?: BillingProductResponseData.Raw | null;
        value_bool?: boolean | null;
        value_credit?: BillingCreditResponseData.Raw | null;
        value_numeric?: number | null;
        value_trait?: EntityTraitDefinitionResponseData.Raw | null;
        value_trait_id?: string | null;
        value_type: string;
    }
}
