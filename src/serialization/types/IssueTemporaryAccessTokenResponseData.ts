/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const IssueTemporaryAccessTokenResponseData: core.serialization.ObjectSchema<
    serializers.IssueTemporaryAccessTokenResponseData.Raw,
    Schematic.IssueTemporaryAccessTokenResponseData
> = core.serialization.object({
    apiKeyId: core.serialization.property("api_key_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    environmentId: core.serialization.property("environment_id", core.serialization.string()),
    expiredAt: core.serialization.property("expired_at", core.serialization.date()),
    id: core.serialization.string(),
    resourceType: core.serialization.property("resource_type", core.serialization.string()),
    token: core.serialization.string(),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
});

export declare namespace IssueTemporaryAccessTokenResponseData {
    export interface Raw {
        api_key_id: string;
        created_at: string;
        environment_id: string;
        expired_at: string;
        id: string;
        resource_type: string;
        token: string;
        updated_at: string;
    }
}
