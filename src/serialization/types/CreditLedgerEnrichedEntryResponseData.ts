/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { CompanyLedgerResponseData } from "./CompanyLedgerResponseData";
import { BillingCreditLedgerResponseData } from "./BillingCreditLedgerResponseData";
import { FeatureLedgerResponseData } from "./FeatureLedgerResponseData";

export const CreditLedgerEnrichedEntryResponseData: core.serialization.ObjectSchema<
    serializers.CreditLedgerEnrichedEntryResponseData.Raw,
    Schematic.CreditLedgerEnrichedEntryResponseData
> = core.serialization.object({
    billingCreditId: core.serialization.property("billing_credit_id", core.serialization.string()),
    company: CompanyLedgerResponseData.optional(),
    companyId: core.serialization.property("company_id", core.serialization.string()),
    credit: BillingCreditLedgerResponseData.optional(),
    expiredGrantCount: core.serialization.property("expired_grant_count", core.serialization.number()),
    feature: FeatureLedgerResponseData.optional(),
    featureId: core.serialization.property("feature_id", core.serialization.string().optional()),
    firstTransactionAt: core.serialization.property("first_transaction_at", core.serialization.date()),
    freeGrantCount: core.serialization.property("free_grant_count", core.serialization.number()),
    grantCount: core.serialization.property("grant_count", core.serialization.number()),
    lastTransactionAt: core.serialization.property("last_transaction_at", core.serialization.date()),
    manuallyZeroedCount: core.serialization.property("manually_zeroed_count", core.serialization.number()),
    netChange: core.serialization.property("net_change", core.serialization.number()),
    planGrantCount: core.serialization.property("plan_grant_count", core.serialization.number()),
    purchasedGrantCount: core.serialization.property("purchased_grant_count", core.serialization.number()),
    timeBucket: core.serialization.property("time_bucket", core.serialization.date()),
    totalConsumed: core.serialization.property("total_consumed", core.serialization.number()),
    totalGranted: core.serialization.property("total_granted", core.serialization.number()),
    transactionCount: core.serialization.property("transaction_count", core.serialization.number()),
    usageCount: core.serialization.property("usage_count", core.serialization.number()),
    zeroedOutCount: core.serialization.property("zeroed_out_count", core.serialization.number()),
});

export declare namespace CreditLedgerEnrichedEntryResponseData {
    export interface Raw {
        billing_credit_id: string;
        company?: CompanyLedgerResponseData.Raw | null;
        company_id: string;
        credit?: BillingCreditLedgerResponseData.Raw | null;
        expired_grant_count: number;
        feature?: FeatureLedgerResponseData.Raw | null;
        feature_id?: string | null;
        first_transaction_at: string;
        free_grant_count: number;
        grant_count: number;
        last_transaction_at: string;
        manually_zeroed_count: number;
        net_change: number;
        plan_grant_count: number;
        purchased_grant_count: number;
        time_bucket: string;
        total_consumed: number;
        total_granted: number;
        transaction_count: number;
        usage_count: number;
        zeroed_out_count: number;
    }
}
