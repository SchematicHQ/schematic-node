/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { BillingPriceView } from "./BillingPriceView";

export const UsageBasedEntitlementResponseData: core.serialization.ObjectSchema<
    serializers.UsageBasedEntitlementResponseData.Raw,
    Schematic.UsageBasedEntitlementResponseData
> = core.serialization.object({
    consumptionRate: core.serialization.property("consumption_rate", core.serialization.number().optional()),
    featureId: core.serialization.property("feature_id", core.serialization.string()),
    meteredPrice: core.serialization.property("metered_price", BillingPriceView.optional()),
    metricPeriod: core.serialization.property("metric_period", core.serialization.string().optional()),
    metricPeriodMonthReset: core.serialization.property(
        "metric_period_month_reset",
        core.serialization.string().optional(),
    ),
    monthlyUsageBasedPrice: core.serialization.property("monthly_usage_based_price", BillingPriceView.optional()),
    priceBehavior: core.serialization.property("price_behavior", core.serialization.string().optional()),
    valueBool: core.serialization.property("value_bool", core.serialization.boolean().optional()),
    valueNumeric: core.serialization.property("value_numeric", core.serialization.number().optional()),
    valueType: core.serialization.property("value_type", core.serialization.string()),
    yearlyUsageBasedPrice: core.serialization.property("yearly_usage_based_price", BillingPriceView.optional()),
});

export declare namespace UsageBasedEntitlementResponseData {
    export interface Raw {
        consumption_rate?: number | null;
        feature_id: string;
        metered_price?: BillingPriceView.Raw | null;
        metric_period?: string | null;
        metric_period_month_reset?: string | null;
        monthly_usage_based_price?: BillingPriceView.Raw | null;
        price_behavior?: string | null;
        value_bool?: boolean | null;
        value_numeric?: number | null;
        value_type: string;
        yearly_usage_based_price?: BillingPriceView.Raw | null;
    }
}
