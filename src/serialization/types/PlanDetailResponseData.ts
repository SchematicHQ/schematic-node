/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { BillingProductDetailResponseData } from "./BillingProductDetailResponseData";
import { FeatureDetailResponseData } from "./FeatureDetailResponseData";
import { BillingPlanCreditGrantResponseData } from "./BillingPlanCreditGrantResponseData";
import { BillingPriceResponseData } from "./BillingPriceResponseData";

export const PlanDetailResponseData: core.serialization.ObjectSchema<
    serializers.PlanDetailResponseData.Raw,
    Schematic.PlanDetailResponseData
> = core.serialization.object({
    audienceType: core.serialization.property("audience_type", core.serialization.string().optional()),
    billingProduct: core.serialization.property("billing_product", BillingProductDetailResponseData.optional()),
    chargeType: core.serialization.property("charge_type", core.serialization.string()),
    companyCount: core.serialization.property("company_count", core.serialization.number()),
    controlledBy: core.serialization.property("controlled_by", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    description: core.serialization.string(),
    features: core.serialization.list(FeatureDetailResponseData),
    icon: core.serialization.string(),
    id: core.serialization.string(),
    includedCreditGrants: core.serialization.property(
        "included_credit_grants",
        core.serialization.list(BillingPlanCreditGrantResponseData).optional(),
    ),
    isDefault: core.serialization.property("is_default", core.serialization.boolean()),
    isFree: core.serialization.property("is_free", core.serialization.boolean()),
    isTrialable: core.serialization.property("is_trialable", core.serialization.boolean()),
    monthlyPrice: core.serialization.property("monthly_price", BillingPriceResponseData.optional()),
    name: core.serialization.string(),
    oneTimePrice: core.serialization.property("one_time_price", BillingPriceResponseData.optional()),
    planType: core.serialization.property("plan_type", core.serialization.string()),
    trialDays: core.serialization.property("trial_days", core.serialization.number().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    yearlyPrice: core.serialization.property("yearly_price", BillingPriceResponseData.optional()),
});

export declare namespace PlanDetailResponseData {
    export interface Raw {
        audience_type?: string | null;
        billing_product?: BillingProductDetailResponseData.Raw | null;
        charge_type: string;
        company_count: number;
        controlled_by: string;
        created_at: string;
        description: string;
        features: FeatureDetailResponseData.Raw[];
        icon: string;
        id: string;
        included_credit_grants?: BillingPlanCreditGrantResponseData.Raw[] | null;
        is_default: boolean;
        is_free: boolean;
        is_trialable: boolean;
        monthly_price?: BillingPriceResponseData.Raw | null;
        name: string;
        one_time_price?: BillingPriceResponseData.Raw | null;
        plan_type: string;
        trial_days?: number | null;
        updated_at: string;
        yearly_price?: BillingPriceResponseData.Raw | null;
    }
}
