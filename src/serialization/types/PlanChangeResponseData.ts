/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { PlanChangeResponseDataAction } from "./PlanChangeResponseDataAction";
import { PlanChangeResponseDataActorType } from "./PlanChangeResponseDataActorType";
import { PlanSnapshotView } from "./PlanSnapshotView";
import { ApiKeyResponseData } from "./ApiKeyResponseData";
import { ApiKeyRequestListResponseData } from "./ApiKeyRequestListResponseData";
import { PlanChangeResponseDataBasePlanAction } from "./PlanChangeResponseDataBasePlanAction";
import { CompanyResponseData } from "./CompanyResponseData";
import { PlanChangeResponseDataSubscriptionChangeAction } from "./PlanChangeResponseDataSubscriptionChangeAction";
import { SubscriptionTraitUpdate } from "./SubscriptionTraitUpdate";

export const PlanChangeResponseData: core.serialization.ObjectSchema<
    serializers.PlanChangeResponseData.Raw,
    Schematic.PlanChangeResponseData
> = core.serialization.object({
    action: PlanChangeResponseDataAction,
    actorType: core.serialization.property("actor_type", PlanChangeResponseDataActorType),
    addOnsAdded: core.serialization.property("add_ons_added", core.serialization.list(PlanSnapshotView)),
    addOnsRemoved: core.serialization.property("add_ons_removed", core.serialization.list(PlanSnapshotView)),
    apiKey: core.serialization.property("api_key", ApiKeyResponseData.optional()),
    apiKeyRequest: core.serialization.property("api_key_request", ApiKeyRequestListResponseData.optional()),
    basePlan: core.serialization.property("base_plan", PlanSnapshotView.optional()),
    basePlanAction: core.serialization.property("base_plan_action", PlanChangeResponseDataBasePlanAction.optional()),
    company: CompanyResponseData.optional(),
    companyId: core.serialization.property("company_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    environmentId: core.serialization.property("environment_id", core.serialization.string()),
    id: core.serialization.string(),
    previousBasePlan: core.serialization.property("previous_base_plan", PlanSnapshotView.optional()),
    requestId: core.serialization.property("request_id", core.serialization.string().optional()),
    subscriptionChangeAction: core.serialization.property(
        "subscription_change_action",
        PlanChangeResponseDataSubscriptionChangeAction.optional(),
    ),
    traitsUpdated: core.serialization.property("traits_updated", core.serialization.list(SubscriptionTraitUpdate)),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    userId: core.serialization.property("user_id", core.serialization.string().optional()),
    userName: core.serialization.property("user_name", core.serialization.string().optional()),
});

export declare namespace PlanChangeResponseData {
    export interface Raw {
        action: PlanChangeResponseDataAction.Raw;
        actor_type: PlanChangeResponseDataActorType.Raw;
        add_ons_added: PlanSnapshotView.Raw[];
        add_ons_removed: PlanSnapshotView.Raw[];
        api_key?: ApiKeyResponseData.Raw | null;
        api_key_request?: ApiKeyRequestListResponseData.Raw | null;
        base_plan?: PlanSnapshotView.Raw | null;
        base_plan_action?: PlanChangeResponseDataBasePlanAction.Raw | null;
        company?: CompanyResponseData.Raw | null;
        company_id: string;
        created_at: string;
        environment_id: string;
        id: string;
        previous_base_plan?: PlanSnapshotView.Raw | null;
        request_id?: string | null;
        subscription_change_action?: PlanChangeResponseDataSubscriptionChangeAction.Raw | null;
        traits_updated: SubscriptionTraitUpdate.Raw[];
        updated_at: string;
        user_id?: string | null;
        user_name?: string | null;
    }
}
