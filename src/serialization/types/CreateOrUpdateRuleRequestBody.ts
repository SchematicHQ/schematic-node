/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";
import { CreateOrUpdateConditionGroupRequestBody } from "./CreateOrUpdateConditionGroupRequestBody";
import { CreateOrUpdateConditionRequestBody } from "./CreateOrUpdateConditionRequestBody";
import { CreateOrUpdateRuleRequestBodyRuleType } from "./CreateOrUpdateRuleRequestBodyRuleType";

export const CreateOrUpdateRuleRequestBody: core.serialization.ObjectSchema<
  serializers.CreateOrUpdateRuleRequestBody.Raw,
  Schematic.CreateOrUpdateRuleRequestBody
> = core.serialization.object({
  conditionGroups: core.serialization.property(
    "condition_groups",
    core.serialization.list(CreateOrUpdateConditionGroupRequestBody),
  ),
  conditions: core.serialization.list(CreateOrUpdateConditionRequestBody),
  id: core.serialization.string().optional(),
  name: core.serialization.string(),
  priority: core.serialization.number(),
  ruleType: core.serialization.property("rule_type", CreateOrUpdateRuleRequestBodyRuleType.optional()),
  value: core.serialization.boolean(),
});

export declare namespace CreateOrUpdateRuleRequestBody {
  interface Raw {
    condition_groups: CreateOrUpdateConditionGroupRequestBody.Raw[];
    conditions: CreateOrUpdateConditionRequestBody.Raw[];
    id?: string | null;
    name: string;
    priority: number;
    rule_type?: CreateOrUpdateRuleRequestBodyRuleType.Raw | null;
    value: boolean;
  }
}
