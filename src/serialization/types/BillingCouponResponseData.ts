/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const BillingCouponResponseData: core.serialization.ObjectSchema<
    serializers.BillingCouponResponseData.Raw,
    Schematic.BillingCouponResponseData
> = core.serialization.object({
    accountId: core.serialization.property("account_id", core.serialization.string()),
    amountOff: core.serialization.property("amount_off", core.serialization.number().optional()),
    currency: core.serialization.string().optional(),
    duration: core.serialization.string().optional(),
    durationInMonths: core.serialization.property("duration_in_months", core.serialization.number().optional()),
    environmentId: core.serialization.property("environment_id", core.serialization.string()),
    externalId: core.serialization.property("external_id", core.serialization.string()),
    id: core.serialization.string(),
    isActive: core.serialization.property("is_active", core.serialization.boolean()),
    maxRedemptions: core.serialization.property("max_redemptions", core.serialization.number().optional()),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    name: core.serialization.string(),
    percentOff: core.serialization.property("percent_off", core.serialization.number().optional()),
    timesRedeemed: core.serialization.property("times_redeemed", core.serialization.number()),
    validFrom: core.serialization.property("valid_from", core.serialization.date().optional()),
    validUntil: core.serialization.property("valid_until", core.serialization.date().optional()),
});

export declare namespace BillingCouponResponseData {
    interface Raw {
        account_id: string;
        amount_off?: number | null;
        currency?: string | null;
        duration?: string | null;
        duration_in_months?: number | null;
        environment_id: string;
        external_id: string;
        id: string;
        is_active: boolean;
        max_redemptions?: number | null;
        metadata: Record<string, unknown>;
        name: string;
        percent_off?: number | null;
        times_redeemed: number;
        valid_from?: string | null;
        valid_until?: string | null;
    }
}
