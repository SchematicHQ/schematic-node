/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const SubscriptionTraitUpdate: core.serialization.ObjectSchema<
    serializers.SubscriptionTraitUpdate.Raw,
    Schematic.SubscriptionTraitUpdate
> = core.serialization.object({
    featureId: core.serialization.property("feature_id", core.serialization.string()),
    hierarchy: core.serialization.list(core.serialization.string()),
    reason: core.serialization.string(),
    traitId: core.serialization.property("trait_id", core.serialization.string()),
    traitName: core.serialization.property("trait_name", core.serialization.string()),
    traitType: core.serialization.property("trait_type", core.serialization.string()),
    value: core.serialization.string(),
});

export declare namespace SubscriptionTraitUpdate {
    export interface Raw {
        feature_id: string;
        hierarchy: string[];
        reason: string;
        trait_id: string;
        trait_name: string;
        trait_type: string;
        value: string;
    }
}
