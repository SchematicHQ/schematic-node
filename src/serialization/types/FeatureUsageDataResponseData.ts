/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const FeatureUsageDataResponseData: core.serialization.ObjectSchema<
    serializers.FeatureUsageDataResponseData.Raw,
    Schematic.FeatureUsageDataResponseData
> = core.serialization.object({
    entitlementSource: core.serialization.property("entitlement_source", core.serialization.string()),
    entitlementValueType: core.serialization.property("entitlement_value_type", core.serialization.string()),
    featureId: core.serialization.property("feature_id", core.serialization.string()),
    featureName: core.serialization.property("feature_name", core.serialization.string()),
    featureType: core.serialization.property("feature_type", core.serialization.string()),
    hardLimit: core.serialization.property("hard_limit", core.serialization.string()),
    hasAccess: core.serialization.property("has_access", core.serialization.boolean()),
    softLimit: core.serialization.property("soft_limit", core.serialization.string()),
    usage: core.serialization.string(),
});

export declare namespace FeatureUsageDataResponseData {
    export interface Raw {
        entitlement_source: string;
        entitlement_value_type: string;
        feature_id: string;
        feature_name: string;
        feature_type: string;
        hard_limit: string;
        has_access: boolean;
        soft_limit: string;
        usage: string;
    }
}
