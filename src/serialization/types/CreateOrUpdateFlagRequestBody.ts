/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const CreateOrUpdateFlagRequestBody: core.serialization.ObjectSchema<
    serializers.CreateOrUpdateFlagRequestBody.Raw,
    Schematic.CreateOrUpdateFlagRequestBody
> = core.serialization.object({
    defaultValue: core.serialization.property("default_value", core.serialization.boolean()),
    description: core.serialization.string(),
    featureId: core.serialization.property("feature_id", core.serialization.string().optional()),
    flagType: core.serialization.property("flag_type", core.serialization.stringLiteral("boolean")),
    id: core.serialization.string().optional(),
    key: core.serialization.string(),
    maintainerId: core.serialization.property("maintainer_id", core.serialization.string().optional()),
    name: core.serialization.string(),
});

export declare namespace CreateOrUpdateFlagRequestBody {
    export interface Raw {
        default_value: boolean;
        description: string;
        feature_id?: string | null;
        flag_type: "boolean";
        id?: string | null;
        key: string;
        maintainer_id?: string | null;
        name: string;
    }
}
