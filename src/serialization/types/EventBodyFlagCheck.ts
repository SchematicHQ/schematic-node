/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Schematic from "../../api/index";
import * as core from "../../core";

export const EventBodyFlagCheck: core.serialization.ObjectSchema<
    serializers.EventBodyFlagCheck.Raw,
    Schematic.EventBodyFlagCheck
> = core.serialization.object({
    companyId: core.serialization.property("company_id", core.serialization.string().optional()),
    error: core.serialization.string().optional(),
    flagId: core.serialization.property("flag_id", core.serialization.string().optional()),
    flagKey: core.serialization.property("flag_key", core.serialization.string()),
    reason: core.serialization.string(),
    reqCompany: core.serialization.property(
        "req_company",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    ),
    reqUser: core.serialization.property(
        "req_user",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    ),
    ruleId: core.serialization.property("rule_id", core.serialization.string().optional()),
    userId: core.serialization.property("user_id", core.serialization.string().optional()),
    value: core.serialization.boolean(),
});

export declare namespace EventBodyFlagCheck {
    export interface Raw {
        company_id?: string | null;
        error?: string | null;
        flag_id?: string | null;
        flag_key: string;
        reason: string;
        req_company?: Record<string, string> | null;
        req_user?: Record<string, string> | null;
        rule_id?: string | null;
        user_id?: string | null;
        value: boolean;
    }
}
