/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Schematic from "../index.js";

export interface FeatureUsageResponseData {
    /** Whether further usage is permitted. */
    access: boolean;
    /** The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted. */
    allocation?: number;
    /** The type of allocation that is being used. */
    allocation_type: FeatureUsageResponseData.AllocationType;
    company_override?: Schematic.CompanyOverrideResponseData;
    entitlement_expiration_date?: string;
    entitlement_id: string;
    entitlement_type: string;
    feature?: Schematic.FeatureDetailResponseData;
    /** The time at which the metric will reset. */
    metric_reset_at?: string;
    /** If the period is current_month, when the month resets. */
    month_reset?: string;
    monthly_usage_based_price?: Schematic.BillingPriceView;
    /** The period over which usage is measured. */
    period?: string;
    plan?: Schematic.PlanResponseData;
    plan_entitlement?: Schematic.PlanEntitlementResponseData;
    price_behavior?: string;
    /** The soft limit for the feature usage. Available only for overage price behavior */
    soft_limit?: number;
    /** The amount of usage that has been consumed; a null value indicates that usage is not being measured. */
    usage?: number;
    yearly_usage_based_price?: Schematic.BillingPriceView;
}

export namespace FeatureUsageResponseData {
    /**
     * The type of allocation that is being used.
     */
    export type AllocationType = "boolean" | "numeric" | "trait" | "unlimited";
    export const AllocationType = {
        Boolean: "boolean",
        Numeric: "numeric",
        Trait: "trait",
        Unlimited: "unlimited",
    } as const;
}
