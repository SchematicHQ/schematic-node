// This file was auto-generated by Fern from our API Definition.

import type * as Schematic from "../../../../index.js";

/**
 * @example
 *     {
 *         company_id: "company_id",
 *         for_fallback_plan: true,
 *         for_initial_plan: true,
 *         for_trial_expiry_plan: true,
 *         has_product_id: true,
 *         plan_type: "plan",
 *         q: "q",
 *         requires_payment_method: true,
 *         without_entitlement_for: "without_entitlement_for",
 *         without_product_id: true,
 *         without_paid_product_id: true,
 *         limit: 1,
 *         offset: 1
 *     }
 */
export interface ListPlansRequest {
    company_id?: string;
    /** Filter for plans valid as fallback plans (not linked to billing) */
    for_fallback_plan?: boolean;
    /** Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial) */
    for_initial_plan?: boolean;
    /** Filter for plans valid as trial expiry plans (not linked to billing or free) */
    for_trial_expiry_plan?: boolean;
    /** Filter out plans that do not have a billing product ID */
    has_product_id?: boolean;
    ids?: string | string[];
    /** Filter by plan type */
    plan_type?: Schematic.ListPlansRequestPlanType;
    q?: string;
    /** Filter for plans that require a payment method (inverse of ForInitialPlan) */
    requires_payment_method?: boolean;
    /** Filter out plans that already have a plan entitlement for the specified feature ID */
    without_entitlement_for?: string;
    /** Filter out plans that have a billing product ID */
    without_product_id?: boolean;
    /** Filter out plans that have a paid billing product ID */
    without_paid_product_id?: boolean;
    /** Page limit (default 100) */
    limit?: number;
    /** Page offset (default 0) */
    offset?: number;
}
