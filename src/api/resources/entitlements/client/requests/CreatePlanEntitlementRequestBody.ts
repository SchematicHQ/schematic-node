// This file was auto-generated by Fern from our API Definition.

import type * as Schematic from "../../../../index.js";

/**
 * @example
 *     {
 *         feature_id: "feature_id",
 *         plan_id: "plan_id",
 *         value_type: "boolean"
 *     }
 */
export interface CreatePlanEntitlementRequestBody {
    billing_product_id?: string;
    billing_threshold?: number;
    credit_consumption_rate?: number;
    currency?: string;
    feature_id: string;
    metric_period?: CreatePlanEntitlementRequestBody.MetricPeriod;
    metric_period_month_reset?: CreatePlanEntitlementRequestBody.MetricPeriodMonthReset;
    monthly_metered_price_id?: string;
    monthly_price_tiers?: Schematic.CreatePriceTierRequestBody[];
    monthly_unit_price?: number;
    monthly_unit_price_decimal?: string;
    overage_billing_product_id?: string;
    plan_id: string;
    price_behavior?: CreatePlanEntitlementRequestBody.PriceBehavior;
    /** Use MonthlyPriceTiers or YearlyPriceTiers instead */
    price_tiers?: Schematic.CreatePriceTierRequestBody[];
    soft_limit?: number;
    tier_mode?: string;
    value_bool?: boolean;
    value_credit_id?: string;
    value_numeric?: number;
    value_trait_id?: string;
    value_type: CreatePlanEntitlementRequestBody.ValueType;
    yearly_metered_price_id?: string;
    yearly_price_tiers?: Schematic.CreatePriceTierRequestBody[];
    yearly_unit_price?: number;
    yearly_unit_price_decimal?: string;
}

export namespace CreatePlanEntitlementRequestBody {
    export const MetricPeriod = {
        AllTime: "all_time",
        CurrentMonth: "current_month",
        CurrentWeek: "current_week",
        CurrentDay: "current_day",
    } as const;
    export type MetricPeriod = (typeof MetricPeriod)[keyof typeof MetricPeriod];
    export const MetricPeriodMonthReset = {
        FirstOfMonth: "first_of_month",
        BillingCycle: "billing_cycle",
    } as const;
    export type MetricPeriodMonthReset = (typeof MetricPeriodMonthReset)[keyof typeof MetricPeriodMonthReset];
    export const PriceBehavior = {
        PayAsYouGo: "pay_as_you_go",
        PayInAdvance: "pay_in_advance",
        Overage: "overage",
        CreditBurndown: "credit_burndown",
        Tier: "tier",
    } as const;
    export type PriceBehavior = (typeof PriceBehavior)[keyof typeof PriceBehavior];
    export const ValueType = {
        Boolean: "boolean",
        Credit: "credit",
        Numeric: "numeric",
        Trait: "trait",
        Unlimited: "unlimited",
    } as const;
    export type ValueType = (typeof ValueType)[keyof typeof ValueType];
}
