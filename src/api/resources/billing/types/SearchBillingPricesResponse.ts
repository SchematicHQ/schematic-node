// This file was auto-generated by Fern from our API Definition.

import type * as Schematic from "../../../index.js";

export interface SearchBillingPricesResponse {
    data: Schematic.BillingPriceView[];
    /** Input parameters */
    params: SearchBillingPricesResponse.Params;
}

export namespace SearchBillingPricesResponse {
    /**
     * Input parameters
     */
    export interface Params {
        /** Filter for prices valid for initial plans (free prices only) */
        for_initial_plan?: boolean;
        /** Filter for prices valid for trial expiry plans (free prices only) */
        for_trial_expiry_plan?: boolean;
        ids?: string[];
        interval?: string;
        /** Page limit (default 100) */
        limit?: number;
        /** Page offset (default 0) */
        offset?: number;
        price?: number;
        product_id?: string;
        q?: string;
        /** Filter for prices that require a payment method (inverse of ForInitialPlan) */
        requires_payment_method?: boolean;
        tiers_mode?: Params.TiersMode;
        usage_type?: Params.UsageType;
    }

    export namespace Params {
        export const TiersMode = {
            Volume: "volume",
            Graduated: "graduated",
        } as const;
        export type TiersMode = (typeof TiersMode)[keyof typeof TiersMode];
        export const UsageType = {
            Licensed: "licensed",
            Metered: "metered",
        } as const;
        export type UsageType = (typeof UsageType)[keyof typeof UsageType];
    }
}
