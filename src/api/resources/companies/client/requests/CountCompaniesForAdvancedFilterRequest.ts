// This file was auto-generated by Fern from our API Definition.

import type * as Schematic from "../../../../index.js";

/**
 * @example
 *     {
 *         monetized_subscriptions: true,
 *         q: "q",
 *         without_plan: true,
 *         without_subscription: true,
 *         sort_order_column: "sort_order_column",
 *         sort_order_direction: "asc",
 *         limit: 1,
 *         offset: 1
 *     }
 */
export interface CountCompaniesForAdvancedFilterRequest {
    /** Filter companies by multiple company IDs (starts with comp_) */
    ids?: string | string[];
    /** Filter companies by one or more plan IDs (each ID starts with plan_) */
    plan_ids?: string | string[];
    /** Filter companies by one or more feature IDs (each ID starts with feat_) */
    feature_ids?: string | string[];
    /** Filter companies by one or more credit type IDs (each ID starts with bcrd_) */
    credit_type_ids?: string | string[];
    /** Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid) */
    subscription_statuses?: string | string[];
    /** Filter companies by one or more subscription types (paid, free, trial) */
    subscription_types?: string | string[];
    /** Filter companies that have monetized subscriptions */
    monetized_subscriptions?: boolean;
    /** Search for companies by name, keys or string traits */
    q?: string;
    /** Filter out companies that have a plan */
    without_plan?: boolean;
    /** Filter out companies that have a subscription */
    without_subscription?: boolean;
    /** Column to sort by (e.g. name, created_at, last_seen_at) */
    sort_order_column?: string;
    /** Direction to sort by (asc or desc) */
    sort_order_direction?: Schematic.CountCompaniesForAdvancedFilterRequestSortOrderDirection;
    /** Select the display columns to return (e.g. plan, subscription, users, last_seen_at) */
    display_properties?: string | string[];
    /** Page limit (default 100) */
    limit?: number;
    /** Page offset (default 0) */
    offset?: number;
}
