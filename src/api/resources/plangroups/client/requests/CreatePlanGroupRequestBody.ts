/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Schematic from "../../../../index";

/**
 * @example
 *     {
 *         addOnIds: ["add_on_ids"],
 *         checkoutCollectAddress: true,
 *         checkoutCollectEmail: true,
 *         checkoutCollectPhone: true,
 *         enableTaxCollection: true,
 *         orderedAddOns: [{
 *                 planId: "plan_id"
 *             }],
 *         orderedBundleList: [{
 *                 bundleId: "bundleId"
 *             }],
 *         orderedPlans: [{
 *                 planId: "plan_id"
 *             }],
 *         preventDowngradesWhenOverLimit: true,
 *         showCredits: true,
 *         showPeriodToggle: true,
 *         showZeroPriceAsFree: true,
 *         syncCustomerBillingDetailsForTax: true
 *     }
 */
export interface CreatePlanGroupRequestBody {
    addOnCompatibilities?: Schematic.CompatiblePlans[];
    /** Use OrderedAddOns instead */
    addOnIds: string[];
    checkoutCollectAddress: boolean;
    checkoutCollectEmail: boolean;
    checkoutCollectPhone: boolean;
    customPlanConfig?: Schematic.CustomPlanConfig;
    customPlanId?: string;
    defaultPlanId?: string;
    enableTaxCollection: boolean;
    fallbackPlanId?: string;
    initialPlanId?: string;
    initialPlanPriceId?: string;
    orderedAddOns: Schematic.OrderedPlansInGroup[];
    orderedBundleList: Schematic.PlanGroupBundleOrder[];
    orderedPlans: Schematic.OrderedPlansInGroup[];
    preventDowngradesWhenOverLimit: boolean;
    showCredits: boolean;
    showPeriodToggle: boolean;
    showZeroPriceAsFree: boolean;
    syncCustomerBillingDetailsForTax: boolean;
    trialDays?: number;
    trialExpiryPlanId?: string;
    trialExpiryPlanPriceId?: string;
    trialPaymentMethodRequired?: boolean;
}
